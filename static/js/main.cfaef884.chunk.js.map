{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","robo","i","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAaeA,EAXH,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACrB,OACI,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,sBAAKC,UAAU,KAAf,UACI,6BAAKH,IACL,4BAAIC,WCSLK,EAdC,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACd,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAKC,GACd,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCONC,EAbG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAChB,OACI,qBAAKT,UAAW,MAAhB,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAQ,kBAAkBC,OAAO,SAAjE,SACKJ,EAAMK,YCiBJC,G,yDAjBX,WAAYN,GAAO,IAAD,8BACd,gBACKO,MAAM,CACPC,UAAU,GAHA,E,qDAMlB,SAAmBC,EAAMC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKX,MAAMK,a,GAdCQ,cCyCZC,E,kDArCX,aAAc,IAAD,8BACT,gBAOJnB,eAAiB,SAACoB,GACd,EAAKH,SAAS,CAACI,YAAcD,EAAME,OAAOC,SAP1C,EAAKX,MAAM,CACPjB,OAAQ,GACR0B,YAAa,IAJR,E,qDAWb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAQ,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAGxC,WACI,MAA2BZ,KAAKJ,MAAzBjB,EAAP,EAAOA,OAAO0B,EAAd,EAAcA,YACRQ,EAAelC,EAAOmC,QAAO,SAAAC,GAC/B,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAW,KAAhB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,eAAgBgB,KAAKhB,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUL,OAAQkC,WAP9B,+C,GAxBMM,IAAMjB,WCKTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cfaef884.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card= ({name,email,id})=>{\r\n    return(\r\n        <div className='bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div className='tc'>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>       \r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robots}) =>{\r\n    return(\r\n        <div>\r\n            {robots.map((robo,i) =>{\r\n                return <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n                />\r\n            })}\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({onSearchChange}) => {\r\n    return(\r\n        <div className ='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'  \r\n                type='Search'\r\n                placeholder='search robots'\r\n                onChange={onSearchChange}\r\n            />\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll', border: '5px solid black',height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default Scroll;","import { render } from '@testing-library/react';\r\nimport React,{Component} from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch (error,info) {\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport './App.css'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield : event.target.value})\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>{this.setState({robots:users})});\r\n    }\r\n\r\n    render(){\r\n        const {robots,searchfield}=this.state;\r\n        const filteredRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        } )\r\n        return !robots.length ?\r\n            <h1>Loading..</h1>:\r\n            (\r\n            <div className= 'tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox onSearchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n            )\r\n    }\r\n} \r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}